plugins {
    id 'java'
    id 'maven'
    id "com.github.johnrengelman.shadow" version "6.1.0"

}
compileJava {
    targetCompatibility = JavaVersion.VERSION_11
    sourceCompatibility = JavaVersion.VERSION_11
    options.encoding = 'UTF-8'
}

configurations {
    deployerJars
    shadow
}


repositories {
    maven {
        url = "https://repo.maven.apache.org/maven2/"
    }
    mavenLocal()
    jcenter()
    maven {
        url = 'https://repo.kingtux.me/storages/maven/kingtux-repo'
    }
    maven {
        url = 'https://repo.kingtux.me/storages/maven/ryandw11'
    }
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        url 'https://repo.ryandw11.com/repository/maven-snapshots/'
    }

}
group = 'org.kakara'
version = '1.0-RC-SNAPSHOT'
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.30'
    compile 'org.apache.commons:commons-lang3:3.11'
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'com.google.guava:guava:30.0-jre'
    compile project(":core")

    compile group: 'org.jetbrains', name: 'annotations', version: '20.1.0'
    compileOnly 'me.ryandw11:ods:1.0-MEM-SNAPSHOT'
}


jar {

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

uploadArchives {

    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "https://repo.kingtux.me/storages/maven/kakara") {
            authentication(userName: System.getProperty('credentials.username'),
                    password: System.getProperty('credentials.password'))
        }

    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}