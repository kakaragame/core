/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}
compileJava {
    targetCompatibility = JavaVersion.VERSION_11
    sourceCompatibility = JavaVersion.VERSION_11
    options.encoding = 'UTF-8'
}

configurations {
    deployerJars
    shadow
}
ext {
    username = System.getProperty('credentials.username') != null ? System.getProperty('credentials.username') : mavenUser
    password = System.getProperty('credentials.password') != null ? System.getProperty('credentials.password') : mavenPassword
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.kingtux.me/storages/maven/kingtux-repo'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'me.kingtux:simpleannotation:1.3.1'
    compile 'org.slf4j:slf4j-api:1.7.29'
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'com.google.guava:guava:28.2-jre'
    testCompile 'org.junit.platform:junit-platform-surefire-provider:1.2.0-M1'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.2.0-M1'
}

group = 'org.kakara'
version = '1.0-SNAPSHOT'
jar {

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "https://repo.kingtux.me/storages/maven/kakara") {
            authentication(userName: rootProject.ext.username,
                    password: rootProject.ext.password)
        }
        pom.groupId = "org.kakara"
        pom.artifactId = "core"
        pom.version = "1.0.0-SNAPSHOT"
    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar
    archives javadocJar

}
